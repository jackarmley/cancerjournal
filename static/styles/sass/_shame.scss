/**
 * Shame file
 * Add quick changes here, to be incorperated properly at a later point
 */

/**
 * Layout wrap
 */

.layoutwrap{
    position: relative;
    width: auto;
    max-width: 60rem;
    margin: auto;
}

/**
 * Menu
 */
$options: post, appt, mood, store;
$optionsize: 6rem;

.menu{
    @include setsize($optionsize);
    position: fixed;
    bottom: $optionsize;
    left: 50%;
    z-index: 10;
    margin-left: -($optionsize / 2);
    ul{
        list-style: none;
    }
    li{
        display: inline;
    }
    a{
        @include setsize($optionsize);
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        border-radius: 100%;
        line-height: $optionsize;
        text-decoration: none;
        text-align: center;
        color: color(white);
        box-shadow: 0 .5rem .5rem fade-out(black,.8);
    }
    &-trigger{
        z-index: 1;
        background: $mint;
    }
    &-option{
        $i: 0;
        $l: length($options);
        @for $i from 1 through $l{
            &:nth-child(#{$l}n + #{$i}) a{
                background: color( nth($options,$i) );
                transition-delay: .1 * $i#{'s'};
                &:before{
                    background-image: url('../images/#{nth($options,$i)}.svg');
                }
            }
            $i: $i + 1;
        }
        a{
            transition: all .1s ease;
            transform: scale(.5);
            &:before{
                @include setsize(100%);
                content:' ';
                display: block;
                background-position: center center;
                background-repeat: no-repeat;
                background-size: 70% auto;
            }
        }
    }
    &.is-active{
        .menu-option{
            &:nth-child(1) a{
                transform: translate(-($optionsize + 1rem),0) scale(1);
            }
            &:nth-child(2) a{
                transform: translate(-(($optionsize / 2) + 1rem),-($optionsize + 1rem)) scale(1);
            }
            &:nth-child(3) a{
                transform: translate((($optionsize / 2) + 1rem),-($optionsize + 1rem)) scale(1);
            }
            &:nth-child(4) a{
                transform: translate(($optionsize + 1rem),0) scale(1);
            }
        }
    }
}

/**
 * Entry
 */
.entry{
    margin-bottom: 2rem;
    overflow: hidden;
    &-inner{
        @extend %clearfix;
        position: relative;
        overflow: hidden;
        padding: 2rem 2rem 2rem 6rem;
        border-radius: .5rem;
        background: white;
        box-shadow: .5rem .5rem fade-out(black,.8);
        & > :first-child{
            margin-top: 0;
        }
        & > :last-child{
            margin-bottom: 0;
        }
        &:before{
            @include setsize(4rem 100%);
            position: absolute;
            top: 0;
            left: 0;
            content:' ';
            display: block;
            background: grey;
        }
    }
    @each $option in $options{
        &.entry--cat-#{$option}{
            .entry-inner:before{
                background: url('../images/#{$option}.svg') no-repeat 50% 3rem/3rem 3rem color($option) ;
            }
        }
    }
    // Add entry
    &--add{
        max-height: 0;
        margin-bottom: 0;
        transition: all .5s ease;
        &.is-active{
            max-height: 100rem;
            margin-bottom: 2rem;
        }
    }
}


/**
 * Share
 */
.share-btn{
    display: inline-block;
    float: right;
    &:before{
        @include setsize(1.5em);
        content:' ';
        display: inline-block;
        vertical-align: bottom;
        margin-right: .5rem;
        background: url('../images/share.svg');
    }
}
